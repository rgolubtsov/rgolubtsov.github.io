#!/usr/bin/env bash
# utils/html-emoji-preproc
# =============================================================================
# This helper script automates replacing emoji character sequences with their
# image representations.
#
# It searches for files in the data/ directory (expected they are HTML docs
# generated by Harp from their Markdown counterparts) which contain emoji
# sequences, and replaces them with the HTML tag <img> referring to those
# emoji images stored on the GitHub Assets site.
# =============================================================================
# Copyright (C) 2019 Radislav (Radicchio) Golubtsov
#
# (See the LICENSE file at the top of the source tree.)
#

# Helper constants.
declare -r EXIT_FAILURE=1 #    Failing exit status.
declare -r EXIT_SUCCESS=0 # Successful exit status.

declare -r REPL_PREFIX="<img\ src=\"http\:\/\/github\.githubassets\.com\/images\/icons\/emoji\/unicode\/"
declare -r REPL_SUFFIX="\.png\"\ class=\"emoji\"\ alt=\"\"\ \/>"

echo "=== Making emoji replacements with images against their character sequences."

grep -Rl   ":+1:"         ./data/ | xargs \
sed  -i -e "s/\:+1\:/${REPL_PREFIX}1f44d${REPL_SUFFIX}/g"

grep -Rl   ":blue_heart:" ./data/ | xargs \
sed  -i -e "s/\:blue_heart\:/${REPL_PREFIX}1f499${REPL_SUFFIX}/g"

grep -Rl   ":smiley:"     ./data/ | xargs \
sed  -i -e "s/\:smiley\:/${REPL_PREFIX}1f603${REPL_SUFFIX}/g"

# --- Debug output - Begin ----------------------------------------------------
# Searching for and printing out all the entries containing "emoji".
#echo; find ./data/ -type f | xargs grep "emoji"; echo
# --- Debug output - End ------------------------------------------------------

# If there is an error -- telling the OS about this.
if [ $? -eq ${EXIT_FAILURE} ]; then
    exit    ${EXIT_FAILURE}
fi

exit        ${EXIT_SUCCESS}

# vim:set nu et ts=4 sw=4:
